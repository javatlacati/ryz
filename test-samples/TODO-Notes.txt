DONE - To remove exception in the byte code use something like javassist see: so/4337281
- Support multiple public class in the same source
- Create attribute and don't duplicate it when defined in method :-S
STARTED - Create Bool class and simple blocks of code.
DONE - Args, varargs
 named args with default values
- get/set properties like generation

DONE needs more work - Indicate what lines haven't been processed
DONE needs more work - Compile using a classpath  ( to load existing classes )
STARTED - Work on blocks.
- Block literal
STARTED - Block invocation
STARTED - Block identification
STARTED - Block parameters:
    TODO: fails when type is primitive,
    fails on assignment identification,
    fails to identify block declaration elsewhere than 1st param
- Block return type

STARTED - Extension methods
    - For core libraries ( if, for, while etc )
- Infer type from expresion ie:
   result = some.method() // method type = int "result" should be declared as "int"
- Casts // java int i = ( int ) 0L -> i : Int = Int( 0L )
- Exception handling is broken when using "main(){}"
- Add literal as expression "11".toString() or true.isTrue?((){})
- Multiline string to honor the identation
- Multilie string to support:
  // There are three spaces after the "
  a = "
  This
    will
      be
  "
  Should yield: "   This%n     will%n       be"
